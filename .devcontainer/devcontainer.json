{
	"name": "C# (.NET)",
	"dockerComposeFile": "../docker-compose.yml",
	"service": "rust",
	"workspaceFolder": "/workspace",
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		// "--init",
		// "--privileged"
	],
	// "build": {
	// 	"dockerfile": "Dockerfile",
	// 	"args": {
	// 		// Update 'VARIANT' to pick a .NET Core version: 2.1, 3.1, 5.0
	// 		"VARIANT": "5.0",
	// 		// Options
	// 		"INSTALL_NODE": "false",
	// 		"NODE_VERSION": "lts/*",
	// 		"INSTALL_AZURE_CLI": "false"
	// 	}
	// },
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"lldb.executable": "/usr/bin/lldb",
		"files.watcherExclude": {
			"**/target/**": true
		},
		"rust-analyser.checkOnSave": "clippy",
		// "terminal.integrated.shell.linux": "/usr/bin/zsh",
		"plantuml.render": "PlantUMLServer",
		"plantuml.server": "http://plantuml:8081/",
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		// my common extensions
		"alefragnani.bookmarks",
		"asciidoctor.asciidoctor-vscode",
		"bierner.github-markdown-preview",
		"DavidAnson.vscode-markdownlint",
		"donjayamanne.githistory",
		"dotjoshjohnson.xml",
		"eamodio.gitlens",
		"esbenp.prettier-vscode",
		// "formulahendry.code-runner", // giving us grief
		"github.vscode-pull-request-github",
		"hbenl.vscode-test-explorer",
		"hoovercj.vscode-power-mode",
		"jebbs.plantuml",
		"mhutchie.git-graph",
		"ms-vscode.test-adapter-converter",
		"mutantdino.resourcemonitor",
		"redhat.vscode-yaml",
		"ritwickdey.liveserver",
		"ryanluker.vscode-coverage-gutters",
		"seatonjiang.gitmoji-vscode",
		"slevesque.vscode-hexdump",
		"streetsidesoftware.code-spell-checker",
		"wghats.vscode-nxunit-test-adapter",
		"yzhang.markdown-all-in-one",
		"shd101wyy.markdown-preview-enhanced",
		// dotnet
		"matklad.rust-analyzer",
		"serayuzgur.crates",
		"tamasfe.even-better-toml",
		"vadimcn.vscode-lldb",
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [5000, 5001],
	// [Optional] To reuse of your local HTTPS dev cert:
	//
	// 1. Export it locally using this command:
	//    * Windows PowerShell:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//    * macOS/Linux terminal:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	// 
	// 2. Uncomment these 'remoteEnv' lines:
	//    "remoteEnv": {
	// 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
	//        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	//    },
	//
	// 3. Do one of the following depending on your scenario:
	//    * When using GitHub Codespaces and/or Remote - Containers:
	//      1. Start the container
	//      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
	//      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
	//
	//    * If only using Remote - Containers with a local container, uncomment this line instead:
	//      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],
	// "mounts": [
	// 	"source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
	// 	"source=${localEnv:HOME}/.gnupg,target=/home/vscode/.gnupg,type=bind,consistency=cached",
	// ],
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "sh ./.devcontainer/custom-scripts/git/configure-git.sh",
	// "postCreateCommand": "dotnet restore",
	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}